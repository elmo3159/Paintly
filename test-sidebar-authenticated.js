const { chromium, devices } = require('@playwright/test');

(async () => {
  console.log('üîç Ë™çË®º‰ªò„Åç„Çµ„Ç§„Éâ„Éê„Éº„ÉÜ„Çπ„Éà„ÇíÈñãÂßã„Åó„Åæ„Åô...');

  const iPhone14 = devices['iPhone 14'];
  const browser = await chromium.launch({
    headless: false,
    slowMo: 1000,
    devtools: true
  });

  const context = await browser.newContext({
    ...iPhone14,
    hasTouch: true,
    isMobile: true
  });

  const page = await context.newPage();

  try {
    // „Ç≥„É≥„ÇΩ„Éº„É´„É≠„Ç∞„Å®„Ç®„É©„Éº„ÇíÁõ£Ë¶ñ
    page.on('console', msg => {
      const type = msg.type();
      if (type === 'error' || type === 'warn' || msg.text().includes('sidebar') || msg.text().includes('mobile')) {
        console.log(`üîç [${type.toUpperCase()}]`, msg.text());
      }
    });
    page.on('pageerror', error => console.error('‚ùå „Éö„Éº„Ç∏„Ç®„É©„Éº:', error.message));

    console.log('üì± „Çπ„ÉÜ„ÉÉ„Éó1: „Çµ„Ç§„Éà„Å´„Ç¢„ÇØ„Çª„Çπ„Åó„Å¶Ë™çË®º');
    await page.goto('http://172.17.161.101:9090');
    await page.waitForLoadState('networkidle');
    await page.screenshot({ path: '.playwright-mcp/auth-01-initial.png' });

    // „Çµ„Ç§„É≥„Ç§„É≥„Éö„Éº„Ç∏„ÅÆÂ†¥Âêà„ÅØË™çË®º„ÇíÂÆüË°å
    const currentUrl = page.url();
    if (currentUrl.includes('signin') || currentUrl.includes('auth')) {
      console.log('üîê Ë™çË®º„ÅåÂøÖË¶Å„Åß„Åô - „É°„Éº„É´„Ç¢„Éâ„É¨„Çπ„Å®„Éë„Çπ„ÉØ„Éº„Éâ„Åß„É≠„Ç∞„Ç§„É≥');

      // „É°„Éº„É´„Ç¢„Éâ„É¨„Çπ„Å®„Éë„Çπ„ÉØ„Éº„Éâ„Åß„É≠„Ç∞„Ç§„É≥
      const emailInput = page.locator('input[type="email"]');
      const passwordInput = page.locator('input[type="password"]');
      const signInButton = page.locator('button[type="submit"]');

      if (await emailInput.isVisible({ timeout: 5000 })) {
        await emailInput.fill('elmodayo3159@gmail.com');
        await passwordInput.fill('sanri3159');
        await page.screenshot({ path: '.playwright-mcp/auth-02-credentials-filled.png' });

        await signInButton.click();
        console.log('üîÑ „É≠„Ç∞„Ç§„É≥Ë©¶Ë°å‰∏≠...');

        // „É™„ÉÄ„Ç§„É¨„ÇØ„Éà„ÇíÂæÖÊ©ü
        await page.waitForURL(/dashboard|customer/, { timeout: 15000 }).catch(() => {
          console.log('‚ö†Ô∏è „ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ„Å∏„ÅÆ„É™„ÉÄ„Ç§„É¨„ÇØ„Éà„Åå„Çø„Ç§„É†„Ç¢„Ç¶„Éà - ÊâãÂãï„ÅßÁßªÂãï„Åó„Åæ„Åô');
        });
      }
    }

    // „ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ„Å´ÁßªÂãï
    console.log('üìç „ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ„Å´ÁßªÂãï');
    await page.goto('http://172.17.161.101:9090/dashboard', { waitUntil: 'networkidle' });
    await page.screenshot({ path: '.playwright-mcp/auth-03-dashboard.png' });

    // È°ßÂÆ¢„Éö„Éº„Ç∏„É™„É≥„ÇØ„ÇíÊé¢„Åó„Å¶ÁßªÂãï
    console.log('üéØ È°ßÂÆ¢„Éö„Éº„Ç∏„Å´ÁßªÂãï');

    // Êñ∞Ë¶èÈ°ßÂÆ¢„Éö„Éº„Ç∏„Çí‰ΩúÊàêÔºà„Çµ„Ç§„Éâ„Éê„Éº„ÅåÈñã„ÅÑ„ÅüÁä∂ÊÖã„ÅßÔºâ
    const newCustomerButton = page.locator('button').filter({ hasText: 'Êñ∞Ë¶èÈ°ßÂÆ¢„Éö„Éº„Ç∏‰ΩúÊàê' });
    if (await newCustomerButton.isVisible({ timeout: 5000 })) {
      await newCustomerButton.click();
      await page.waitForNavigation({ timeout: 10000 });
      console.log('‚úÖ Êñ∞Ë¶èÈ°ßÂÆ¢„Éö„Éº„Ç∏„Çí‰ΩúÊàê„Åó„Åæ„Åó„Åü');
    } else {
      // Êó¢Â≠ò„ÅÆÈ°ßÂÆ¢„Éö„Éº„Ç∏„Å´ÁßªÂãï
      await page.goto('http://172.17.161.101:9090/customer/009e75c8-b18d-4583-8b77-ec2623c575ee', { waitUntil: 'networkidle' });
    }

    await page.screenshot({ path: '.playwright-mcp/auth-04-customer-page.png' });

    console.log('üîç „Çπ„ÉÜ„ÉÉ„Éó2: ÂàùÊúü„Çµ„Ç§„Éâ„Éê„ÉºÁä∂ÊÖã„ÅÆË©≥Á¥∞Á¢∫Ë™ç');

    // „Çµ„Ç§„Éâ„Éê„Éº„ÅÆÁä∂ÊÖã„ÇíÁ¢∫Ë™ç
    const initialSidebarState = await page.evaluate(() => {
      const elements = {
        mobileSidebar: document.querySelector('div.fixed.inset-y-0.left-0.z-40'),
        mobileOverlay: document.querySelector('div.fixed.inset-0.z-40.bg-black\\/50'),
        mobileHamburger: document.querySelector('button.fixed.left-4.top-4.z-50.md\\:hidden'),
        desktopSidebar: document.querySelector('div.hidden.md\\:flex.h-screen.w-64'),
        closeButton: Array.from(document.querySelectorAll('button')).find(btn =>
          btn.textContent && btn.textContent.includes('„Çµ„Ç§„Éâ„Éê„Éº„ÇíÈñâ„Åò„Çã'))
      };

      const result = {};
      for (const [name, element] of Object.entries(elements)) {
        if (element) {
          const rect = element.getBoundingClientRect();
          const styles = getComputedStyle(element);
          result[name] = {
            exists: true,
            visible: element.offsetParent !== null,
            display: styles.display,
            visibility: styles.visibility,
            position: { x: rect.x, y: rect.y, width: rect.width, height: rect.height },
            className: element.className,
            computedClasses: {
              'md:hidden': styles.getPropertyValue('--tw-hidden') || 'N/A'
            }
          };
        } else {
          result[name] = { exists: false };
        }
      }

      return {
        viewport: { width: window.innerWidth, height: window.innerHeight },
        isMobile: window.innerWidth < 768,
        elements: result
      };
    });

    console.log('üìä ÂàùÊúü„Çµ„Ç§„Éâ„Éê„ÉºÁä∂ÊÖã:');
    console.log(`  üì± „Éì„É•„Éº„Éù„Éº„Éà: ${initialSidebarState.viewport.width}x${initialSidebarState.viewport.height} („É¢„Éê„Ç§„É´: ${initialSidebarState.isMobile})`);
    for (const [name, state] of Object.entries(initialSidebarState.elements)) {
      if (state.exists) {
        console.log(`  ‚úÖ ${name}: Ë°®Á§∫=${state.visible}, display=${state.display}`);
      } else {
        console.log(`  ‚ùå ${name}: Â≠òÂú®„Åó„Åæ„Åõ„Çì`);
      }
    }

    console.log('üéØ „Çπ„ÉÜ„ÉÉ„Éó3: „É¢„Éê„Ç§„É´„Çµ„Ç§„Éâ„Éê„Éº„ÅÆÂãï‰Ωú„ÉÜ„Çπ„Éà');

    // „É¢„Éê„Ç§„É´„Çµ„Ç§„Éâ„Éê„Éº„ÅåÈñã„ÅÑ„Å¶„ÅÑ„ÇãÂ†¥Âêà„ÅØ„ÉÜ„Çπ„Éà„ÇíÂÆüË°å
    if (initialSidebarState.elements.mobileSidebar?.exists && initialSidebarState.elements.mobileSidebar?.visible) {
      console.log('‚úÖ „É¢„Éê„Ç§„É´„Çµ„Ç§„Éâ„Éê„Éº„ÅåÂàùÊúüË°®Á§∫„Åï„Çå„Å¶„ÅÑ„Åæ„Åô');

      console.log('üî¥ „ÉÜ„Çπ„Éà1: „Ç™„Éº„Éê„Éº„É¨„Ç§„ÇØ„É™„ÉÉ„ÇØ');

      // „Ç™„Éº„Éê„Éº„É¨„Ç§„ÇØ„É™„ÉÉ„ÇØÂâç„ÅÆÁä∂ÊÖãË®òÈå≤
      await page.screenshot({ path: '.playwright-mcp/auth-05-before-overlay-click.png' });

      const overlay = page.locator('div.fixed.inset-0.z-40.bg-black\\/50');
      if (await overlay.isVisible({ timeout: 2000 })) {
        await overlay.click();
        await page.waitForTimeout(1000);
        await page.screenshot({ path: '.playwright-mcp/auth-06-after-overlay-click.png' });

        // „Ç™„Éº„Éê„Éº„É¨„Ç§„ÇØ„É™„ÉÉ„ÇØÂæå„ÅÆÁä∂ÊÖãÁ¢∫Ë™ç
        const afterOverlayState = await page.evaluate(() => {
          const hamburger = document.querySelector('button.fixed.left-4.top-4.z-50.md\\:hidden');
          const sidebar = document.querySelector('div.fixed.inset-y-0.left-0.z-40');
          const overlay = document.querySelector('div.fixed.inset-0.z-40.bg-black\\/50');

          return {
            hamburgerExists: !!hamburger,
            hamburgerVisible: hamburger ? hamburger.offsetParent !== null : false,
            hamburgerDisplay: hamburger ? getComputedStyle(hamburger).display : 'N/A',
            hamburgerClasses: hamburger ? hamburger.className : 'N/A',
            sidebarVisible: sidebar ? sidebar.offsetParent !== null : false,
            overlayVisible: overlay ? overlay.offsetParent !== null : false
          };
        });

        console.log('üìä „Ç™„Éº„Éê„Éº„É¨„Ç§„ÇØ„É™„ÉÉ„ÇØÂæå:');
        console.log(`  „Éè„É≥„Éê„Éº„Ç¨„ÉºÂ≠òÂú®: ${afterOverlayState.hamburgerExists}`);
        console.log(`  „Éè„É≥„Éê„Éº„Ç¨„ÉºË°®Á§∫: ${afterOverlayState.hamburgerVisible}`);
        console.log(`  „Éè„É≥„Éê„Éº„Ç¨„Éºdisplay: ${afterOverlayState.hamburgerDisplay}`);
        console.log(`  „Çµ„Ç§„Éâ„Éê„ÉºË°®Á§∫: ${afterOverlayState.sidebarVisible}`);
        console.log(`  „Ç™„Éº„Éê„Éº„É¨„Ç§Ë°®Á§∫: ${afterOverlayState.overlayVisible}`);

        if (afterOverlayState.hamburgerVisible) {
          console.log('‚úÖ SUCCESS: „Ç™„Éº„Éê„Éº„É¨„Ç§„ÇØ„É™„ÉÉ„ÇØÂæå„Å´„Éè„É≥„Éê„Éº„Ç¨„Éº„É°„Éã„É•„Éº„ÅåË°®Á§∫„Åï„Çå„Åæ„Åó„ÅüÔºÅ');
        } else {
          console.log('‚ùå ISSUE: „Ç™„Éº„Éê„Éº„É¨„Ç§„ÇØ„É™„ÉÉ„ÇØÂæå„ÇÇ„Éè„É≥„Éê„Éº„Ç¨„Éº„É°„Éã„É•„Éº„ÅåË°®Á§∫„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì');
        }

        console.log('üîµ „ÉÜ„Çπ„Éà2: „Éè„É≥„Éê„Éº„Ç¨„Éº„ÇØ„É™„ÉÉ„ÇØ‚ÜíÈñâ„Åò„Çã„Éú„Çø„É≥„ÇØ„É™„ÉÉ„ÇØ');

        // „Éè„É≥„Éê„Éº„Ç¨„Éº„É°„Éã„É•„Éº„Çí„ÇØ„É™„ÉÉ„ÇØ„Åó„Å¶„Çµ„Ç§„Éâ„Éê„Éº„ÇíÂÜçÂ∫¶Èñã„Åè
        const hamburger = page.locator('button.fixed.left-4.top-4.z-50.md\\:hidden');
        if (await hamburger.isVisible({ timeout: 2000 })) {
          await hamburger.click();
          await page.waitForTimeout(1000);
          await page.screenshot({ path: '.playwright-mcp/auth-07-sidebar-reopened.png' });

          // Èñâ„Åò„Çã„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ
          const closeButton = page.locator('button').filter({ hasText: '„Çµ„Ç§„Éâ„Éê„Éº„ÇíÈñâ„Åò„Çã' });
          if (await closeButton.isVisible({ timeout: 2000 })) {
            await closeButton.click();
            await page.waitForTimeout(1000);
            await page.screenshot({ path: '.playwright-mcp/auth-08-after-close-button.png' });

            // Èñâ„Åò„Çã„Éú„Çø„É≥„ÇØ„É™„ÉÉ„ÇØÂæå„ÅÆÁä∂ÊÖãÁ¢∫Ë™ç
            const afterCloseButtonState = await page.evaluate(() => {
              const hamburger = document.querySelector('button.fixed.left-4.top-4.z-50.md\\:hidden');
              const sidebar = document.querySelector('div.fixed.inset-y-0.left-0.z-40');
              const overlay = document.querySelector('div.fixed.inset-0.z-40.bg-black\\/50');

              return {
                hamburgerExists: !!hamburger,
                hamburgerVisible: hamburger ? hamburger.offsetParent !== null : false,
                hamburgerDisplay: hamburger ? getComputedStyle(hamburger).display : 'N/A',
                sidebarVisible: sidebar ? sidebar.offsetParent !== null : false,
                overlayVisible: overlay ? overlay.offsetParent !== null : false
              };
            });

            console.log('üìä Èñâ„Åò„Çã„Éú„Çø„É≥„ÇØ„É™„ÉÉ„ÇØÂæå:');
            console.log(`  „Éè„É≥„Éê„Éº„Ç¨„ÉºÂ≠òÂú®: ${afterCloseButtonState.hamburgerExists}`);
            console.log(`  „Éè„É≥„Éê„Éº„Ç¨„ÉºË°®Á§∫: ${afterCloseButtonState.hamburgerVisible}`);
            console.log(`  „Éè„É≥„Éê„Éº„Ç¨„Éºdisplay: ${afterCloseButtonState.hamburgerDisplay}`);
            console.log(`  „Çµ„Ç§„Éâ„Éê„ÉºË°®Á§∫: ${afterCloseButtonState.sidebarVisible}`);
            console.log(`  „Ç™„Éº„Éê„Éº„É¨„Ç§Ë°®Á§∫: ${afterCloseButtonState.overlayVisible}`);

            if (afterCloseButtonState.hamburgerVisible) {
              console.log('‚úÖ SUCCESS: Èñâ„Åò„Çã„Éú„Çø„É≥„ÇØ„É™„ÉÉ„ÇØÂæå„ÇÇ„Éè„É≥„Éê„Éº„Ç¨„Éº„É°„Éã„É•„Éº„ÅåË°®Á§∫„Åï„Çå„Åæ„Åó„ÅüÔºÅ');
              console.log('üéâ CONCLUSION: ‰∏°Êñπ„ÅÆ„Éë„Çø„Éº„É≥„ÅßÊ≠£Â∏∏„Å´Âãï‰Ωú„Åó„Å¶„ÅÑ„Åæ„ÅôÔºÅ');
            } else {
              console.log('‚ùå ISSUE: Èñâ„Åò„Çã„Éú„Çø„É≥„ÇØ„É™„ÉÉ„ÇØÂæå„ÅØ„Éè„É≥„Éê„Éº„Ç¨„Éº„É°„Éã„É•„Éº„ÅåË°®Á§∫„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì');
              console.log('üîç ANALYSIS: „Åì„Çå„ÅåÂ†±Âëä„Åï„Çå„ÅüÂïèÈ°å„ÅÆÁóáÁä∂„Åß„Åô');
            }
          }
        }
      }
    } else {
      console.log('‚ÑπÔ∏è „É¢„Éê„Ç§„É´„Çµ„Ç§„Éâ„Éê„Éº„ÅåÂàùÊúüË°®Á§∫„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì - „Éè„É≥„Éê„Éº„Ç¨„Éº„É°„Éã„É•„Éº„Çí„ÇØ„É™„ÉÉ„ÇØ„Åó„Å¶Èñã„Åç„Åæ„Åô');

      const hamburger = page.locator('button.fixed.left-4.top-4.z-50.md\\:hidden');
      if (await hamburger.isVisible({ timeout: 2000 })) {
        console.log('‚úÖ „Éè„É≥„Éê„Éº„Ç¨„Éº„É°„Éã„É•„Éº„ÅåË°®Á§∫„Åï„Çå„Å¶„ÅÑ„Åæ„Åô');
        await hamburger.click();
        await page.waitForTimeout(1000);

        // „Åì„Åì„Åã„Çâ‰∏äË®ò„ÅÆ„ÉÜ„Çπ„Éà„ÇíÂÆüË°å
        console.log('üîÑ „Çµ„Ç§„Éâ„Éê„Éº„ÅåÈñã„Åç„Åæ„Åó„Åü - „ÉÜ„Çπ„Éà„ÇíÁ∂ôÁ∂ö„Åó„Åæ„Åô');
        // ... ‰∏äË®ò„ÅÆ„ÉÜ„Çπ„Éà„É≠„Ç∏„ÉÉ„ÇØ„ÇíÁπ∞„ÇäËøî„Åó
      } else {
        console.log('‚ùå CRITICAL: „Éè„É≥„Éê„Éº„Ç¨„Éº„É°„Éã„É•„Éº„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì');
      }
    }

    console.log('üìù „Çπ„ÉÜ„ÉÉ„Éó4: React DevToolsÁöÑ„Å™Áä∂ÊÖãÁ¢∫Ë™ç');

    // „Çà„ÇäË©≥Á¥∞„Å™ReactÁä∂ÊÖã„ÇíÁ¢∫Ë™ç
    const reactStateAnalysis = await page.evaluate(() => {
      // React DevTools„ÅÆ„Çà„ÅÜ„Å™ÊÉÖÂ†±„ÇíÂèñÂæó
      const analysis = {
        timestamp: new Date().toISOString(),
        reactVersion: window.React?.version || 'Unknown',
        environment: process?.env?.NODE_ENV || 'Unknown'
      };

      // ÂÖ®„Å¶„ÅÆ„Éú„Çø„É≥Ë¶ÅÁ¥†„ÇíËß£Êûê
      const buttons = Array.from(document.querySelectorAll('button'));
      analysis.buttons = buttons.map((btn, index) => ({
        index,
        text: btn.textContent?.substring(0, 30) || '',
        className: btn.className,
        visible: btn.offsetParent !== null,
        hasClickHandler: !!btn.onclick || btn.hasAttribute('onclick'),
        position: (() => {
          const rect = btn.getBoundingClientRect();
          return { x: rect.x, y: rect.y, width: rect.width, height: rect.height };
        })()
      })).filter(btn =>
        btn.className.includes('fixed') ||
        btn.text.includes('„Çµ„Ç§„Éâ„Éê„Éº') ||
        btn.text.includes('Menu') ||
        btn.className.includes('hamburger')
      );

      return analysis;
    });

    console.log('üî¨ ReactÁä∂ÊÖãÂàÜÊûê:');
    console.log(`  React Version: ${reactStateAnalysis.reactVersion}`);
    console.log(`  Environment: ${reactStateAnalysis.environment}`);
    console.log('  Èñ¢ÈÄ£„Éú„Çø„É≥Ë¶ÅÁ¥†:');
    reactStateAnalysis.buttons.forEach(btn => {
      console.log(`    [${btn.index}] "${btn.text}" (visible: ${btn.visible})`);
      console.log(`        classes: ${btn.className}`);
    });

    await page.screenshot({ path: '.playwright-mcp/auth-09-final-analysis.png' });

    console.log('‚è∞ ÊâãÂãïÁ¢∫Ë™ç„ÅÆ„Åü„ÇÅ30ÁßíÈñì„Éñ„É©„Ç¶„Ç∂„ÇíÈñã„ÅÑ„Åü„Åæ„Åæ„Å´„Åó„Åæ„Åô');
    await page.waitForTimeout(30000);

  } catch (error) {
    console.error('‚ùå „ÉÜ„Çπ„Éà‰∏≠„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü:', error);
    await page.screenshot({ path: '.playwright-mcp/auth-error.png' });
  } finally {
    await browser.close();
    console.log('üèÅ Ë™çË®º‰ªò„Åç„Çµ„Ç§„Éâ„Éê„Éº„ÉÜ„Çπ„ÉàÂÆå‰∫Ü');
  }
})();